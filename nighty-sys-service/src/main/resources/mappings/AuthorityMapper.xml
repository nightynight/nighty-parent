<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间,作用就是对sql进行分类化管理,理解sql隔离
注意:使用mapper代理方法开发,namespace有特殊重要的作用,namespace等于mapper接口地址-->
<mapper namespace="com.brokepal.nighty.sys.persist.account.AuthorityDao">

    <!--mapper作用:为DAO接口方法提供sql语句配置-->

    <sql id="authorityColumns">
        a.id AS "id",
        a.name AS "name",
        a.description AS "description"
    </sql>

    <sql id="authorityJoins">
    </sql>

    <select id="get" parameterType="String" resultType="Authority">
        SELECT
        <include refid="authorityColumns"/>
        FROM t_authority a
        <include refid="authorityJoins"/>
        WHERE a.id=#{id}
    </select>

    <select id="findList" parameterType="Authority" resultType="Authority">
        SELECT
        <include refid="authorityColumns"/>
        FROM t_authority a
        <include refid="authorityJoins"/>
        <where>
            <if test="id != null and id != ''">
                AND a.id LIKE CONCAT('%', #{id}, '%')
            </if>
            <if test="name != null and name != ''">
                AND a.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="description != null and description != ''">
                AND a.description LIKE CONCAT('%', #{description}, '%')
            </if>
        </where>
        ORDER BY a.id
    </select>
</mapper>
